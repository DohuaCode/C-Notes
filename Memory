*******   & ********
& - gets and address of variable
a = 5 \\ a variable is equals to  value  - 5, if you go to address 'a' you will get '5' value
&a = address of  variable a , it will be like 0x587756,  this address stores value '5'


******** * ********
* - show value, stored in current address
a=5 \\ declare varialbe with value 5
int* p \\ declare pointer
p = &a \\  pointer p  points on  address of a variable 
p  is equal to address of "a" variable, for example 0x123
*p = 5 \\ unpacks the value stored in address 'p' and equals to '5'

*******POINTER*******
Variable which stores an address of  another variable, has a memory address datatype. Pointer points on the first element of data series like array of chars or integers.
Has an datatype specifier like int, char, float
8 BYTE SIZE

#include <stdio.h>

int main(void)
{
   int n = 50;
   int *p = &n;
   printf("%p\n", p);
}
